from Crypto.Util.number import * 
from Crypto.PublicKey import RSA 
from Crypto.Cipher import PKCS1_OAEP

n = 4013610727845242593703438523892210066915884608065890652809524328518978287424865087812690502446831525755541263621651398962044653615723751218715649008058509
p = 51894141255108267693828471848483688186015845988173648228318286999011443419469
q = n//p 
e = 65537
assert n == p*q

d = pow(e,-1,(p-1)*(q-1))
key = RSA.construct((n, e, d))
cipher = PKCS1_OAEP.new(key)

c = "249d72cd1d287b1a15a3881f2bff5788bc4bf62c789f2df44d88aae805b54c9a94b8944c0ba798f70062b66160fee312b98879f1dd5d17b33095feb3c5830d28"
c1 = bytes.fromhex(c)
print(cipher.decrypt(c1))

## crypto{p00R_3570n14}